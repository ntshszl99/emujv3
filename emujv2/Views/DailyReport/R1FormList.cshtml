@{
    ViewBag.Title = "R1FormList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="app-content main-content">
    <div class="side-app">
        <div class="container-fluid main-container">

            <!--Page header-->
            <div class="page-header">
                <div class="page-leftheader">
                    <h4 class="page-title">Form List</h4>
                </div>

            </div>

            <!--End Page header-->
            <!--1-Admin && 5-HQ-->
            <div class="" id=contentAdmin>
                <div class="col-lg-12 col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="mb-3 m-0">
                                <div class="row">
                                    <div class="col-3">
                                        <label class="mt-5 form-label">Region</label>
                                        <select id="region" class="form-control form-select select2">
                                            <option value="-0">Select Region</option>
                                        </select>
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label">KMUJ</label>
                                        <select id="kmuj" class="form-control form-select select2">
                                            <option value="-0">Select KMUJ</option>
                                        </select>
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label">Section</label>
                                        <select id="section" class="form-control form-select select2">
                                            <option value="-0">Select Section</option>
                                        </select>
                                    </div>

                                    <div class="col-3">
                                        <label class="mt-5 form-label">Date (From - To)</label>
                                        <div class="input-group">
                                            <div class="input-group-append">
                                                <span class="input-group-text"><i class=" mt-1 mb-1 fa fa-solid fa fa-calendar font-20"></i></span>
                                            </div>
                                            <input type="text" class="form-control" id="txtDate" required="required" autocomplete="off" />
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="col-lg-12">
                                            <div class="table-responsive table-lg">
                                                <table id="tableAdmin" class="table table-striped table-bordered text-nowrap">
                                                    <thead>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="" id=contentNormal>
                <div class="col-lg-12 col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="mb-3 m-0">
                                <div class="row">
                                    <div class="d-flex justify-content-end">
                                        <div class="m-3  form-label">Work Date</div>
                                        <div class="col-3">
                                            <div class="input-group">
                                                <div class="input-group-append">
                                                    <span class="input-group-text"><i class=" mt-1 mb-1 fa fa-solid fa fa-calendar font-20"></i></span>
                                                </div>
                                                <input type="text" class="form-control" id="txtDate3" required="required" autocomplete="off" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="col-lg-12">
                                            <div class="table-responsive table-lg">
                                                <table id="tableNormal" class="table table-striped table-bordered text-nowrap">
                                                    <thead>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="" id="contentOthers">
                <div class="card">
                    <div class="card-body">
                        <div class="mb-3 m-0">
                            <div class="row">
                                <div class="card-body">
                                    <h4 class="text-muted">Alert</h4>
                                    <p class="text-muted">Sorry, no data found.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--Modal View Details-->
            <div class="modal fade" id="modalDetails" tabindex="-1" aria-labelledby="modalUpdateLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-body text-center p-4">
                            <h4 class=" mt-5">Report ID: </h4>
                            <input readonly id="rptcode" type="text" class="text-success form-control text-center bg-transparent border-0">
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Region</strong></label>
                                        <input readonly id="region" type="text" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>KMUJ</strong></label>
                                        <input readonly id="kmuj" type="text" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Section</strong></label>
                                        <input readonly id="section" type="text" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div></div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Gang</strong></label>
                                        <input readonly id="gang" type="text" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>No. of Staff (Valid)</strong></label>
                                        <input readonly id="pax" type="text" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div></div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Work Date</strong></label>
                                        <input type="text" id="workdate" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Line</strong></label>
                                        <input type="text" id="linecond" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Category</strong></label>
                                        <input type="text" id="category" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Category Details</strong></label>
                                        <input type="text" id="categorydets" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div></div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Work Type</strong></label>
                                        <input type="text" id="worktype" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Total</strong></label>
                                        <input type="text" id="totalWork" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Unit</strong></label>
                                        <input type="text" id="unit" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div></div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Effected KM (From)</strong></label>
                                        <input type="text" id="KMfrom" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Effected KM (To)</strong></label>
                                        <input type="text" id="KMto" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Total KM (meter)</strong></label>
                                        <input type="text" id="totalKM" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div></div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Time Start</strong></label>
                                        <input type="text" id="timeStart" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Time End</strong></label>
                                        <input type="text" id="timeEnd" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Total Time</strong></label>
                                        <input type="text" id="totalTime" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div></div>
                                    <div class="col-12">
                                        <label class="mt-5 form-label"><strong>Additional Note</strong></label>
                                        <input type="text" id="notes" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Work at Station</strong></label>
                                        <input type="text" id="workStation" class="form-control text-center bg-transparent border-0">
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label"><strong>Station Point</strong></label>
                                        <input type="text" id="stPoint" class="form-control text-center bg-transparent border-0">
                                    </div>
                                </div>
                            </div>
                            <button class="btn btn-light mb-5" data-bs-dismiss="modal" aria-label="Close" type="button">Close</button>
                        </div>
                    </div>
                </div>

            </div>

            <!--Modal Delete Data-->
            <div class="modal fade" id="modalDelete" tabindex="-1" aria-labelledby="modalDeleteLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body text-center p-4">
                            <i class="fa fa-exclamation-circle fa-5x text-danger lh-1 mg-t-20 d-inline-block"></i>
                            <h3 class="text-danger">Warning! Are you sure? </h3>
                            <p class="mg-b-20 mg-x-20">You may not be able to recover this data.</p>
                            <h4 class="mt-5 text-danger">Report Number: </h4>
                            <input readonly id="reportno" type="text" class="mb-3 form-control text-center bg-transparent border-0">

                            <button id="submitDelete" class="btn btn-danger mb-5" type="button">Delete</button>
                            <button class="btn btn-light mb-5" data-bs-dismiss="modal" aria-label="Close" type="button">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>

            <!--Modal Update Data-->
            <div class="modal fade" id="modalUpdate" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">                       
                        <div class="modal-body text-center p-4">
                            <h4 class="mt-5 text-danger">Report Number: </h4>
                            <input type="text" id="rptcode2" class="form-control text-center bg-transparent border-0">
                            <div class="row">
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Region</strong></label>
                                    <input readonly id="region" type="text" class="form-control text-center bg-transparent border-0">
                                </div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>KMUJ</strong></label>
                                    <input readonly id="kmuj" type="text" class="form-control text-center bg-transparent border-0">
                                </div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Section</strong></label>
                                    <input readonly id="section" type="text" class="form-control text-center bg-transparent border-0">
                                </div>
                                <div></div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Gang</strong></label>
                                    <select id="gangEdit" type="text" class="form-control form-select select2" required="required" multiple>
                                        <option value="-0">Select Gang</option>
                                    </select>
                                </div>
                                <div class="mb-5 col-3">
                                    <label class="mt-5 form-label"><strong>No. of Staff (Valid)</strong></label>
                                    <input readonly id="gangno" type="text" class="form-control">
                                </div>
                                <div class="col-lg-12">
                                    <div class="table-responsive table-lg">
                                        <table id="tableRep2" class="table table-striped table-bordered text-nowrap">
                                            <thead>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </div>
                                <div></div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Work Date</strong></label>
                                    <input type="text" id="dateEdit" class="form-control" required="required">
                                </div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Line</strong></label>
                                    <select id="linecondEdit" class="form-control form-select select2" required="required">
                                        <option value="-0">.: Select Condition :.</option>
                                    </select>
                                </div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Category</strong></label>
                                    <select id="catEdit" class="form-control form-select select2" required="required">
                                        <option value="-0">.: Select Category :.</option>
                                    </select>
                                </div>
                                <div id="catEmer" class="col-3" style='display:none;'>
                                    <label class="mt-5 form-label">Category</label>
                                    <select id="catDetEdit" class="form-control form-select select2">
                                        <option value="-">.: Select Emergency :.</option>
                                    </select>
                                </div>
                                <div></div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Work Type</strong></label>
                                    <select id="workEdit" class="form-control form-select select2" required="required">
                                        <option value="-0">.: Select Work Type :.</option>
                                    </select>
                                </div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Total</strong></label>
                                    <input id="totalWork2" type="text" class="form-control" required="required">
                                </div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Unit</strong></label>
                                    <input id="unit2" class="form-control" placeholder="Unit" readonly>
                                </div>
                                <div></div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Effected KM (Start)</strong></label>
                                    <input type="number" id="KMfrom2" class="form-control" required="required">
                                </div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Effected KM (End)</strong></label>
                                    <input type="number" id="KMto2" class="form-control" required="required">
                                </div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Effected KM (meter)</strong></label>
                                    <input type="text" id="totalKM2" class="form-control" readonly>
                                </div>
                                <div></div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Time Start</strong></label>
                                    <input type="time" id="timeStart2" class="form-control" required="required">
                                </div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Time End</strong></label>
                                    <input type="time" id="timeEnd2" class="form-control" required="required">
                                </div>
                                <div class="col-3">
                                    <label class="mt-5 form-label"><strong>Time Taken KM</strong></label>
                                    <input type="text" id="totalTime2" class="form-control" readonly>
                                </div>
                                <div></div>
                                <div class="col-3">
                                    <div class="mb-3 mt-5">
                                        <div class="form-label"><strong>Work at Station?</strong></div>
                                        <div class="custom-controls-stacked">
                                            <label class="custom-control custom-radio">
                                                <input type="radio" class="custom-control-input" name="station_option" id="id_radio1" value="Yes">
                                                <span class="custom-control-label">Yes</span>
                                            </label>
                                            <label class="custom-control custom-radio">
                                                <input type="radio" class="custom-control-input" name="station_option" id="id_radio2" value="No">
                                                <span class="custom-control-label">No</span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div id="station" class="col-3" style="display:none;">
                                    <label class="mt-5 form-label">Station</label>
                                    <select id="stationn2" class="form-control form-select select2">
                                        <option value="">.: Select Station :.</option>
                                    </select>
                                </div>
                                <div id="point" class="col-3" style="display:none;">
                                    <label class="mt-5 form-label">Point No.</label>
                                    <input type="text" id="stPoint2" class="form-control" placeholder="Station's Point">
                                </div>
                                <div class="col-xl-12">
                                    <label class="mt-5 form-label"><strong>Additional Information</strong></label>
                                    <textarea class="mb-5 form-control" id="notes2" placeholder="Textarea" rows="3"></textarea>
                                </div>
                            </div>
                            <button aria-label="Update" class="btn btn-success mb-5" type="button">Update</button>
                            <button class="btn btn-light mb-5" data-bs-dismiss="modal" ria-label="Close" type="button">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script src="~/assets/scripts/semua.js"></script>
    <script src="~/assets/scripts/dashboard.js"></script>
    <script src="~/assets/plugins/morris/morris.min.js"></script>
    <script src="~/assets/plugins/raphael/raphael.min.js"></script>
    <script src="~/assets/plugins/select2/select2.min.js"></script>
    <script src="~/assets/plugins/daterangepicker/daterangepicker.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            listGang();
            listLnCondition();
            listCategory();
            listWorkType();
            listCatDetails();
            listWorkUnit();
            listLocation();
            checkSess();
            listRegion();
            listKMUJ();
            listSection();



            //CHECK USER LEVEL
            //user level == 1 & 5
            if (localStorage.getItem("lvlI") === "1" || localStorage.getItem("lvlI") === "5") {
                $("#contentAdmin").show();
                $("#contentNormal").hide();
                $("#contentOthers").hide();

                $('#txtDate').daterangepicker({
                    minYear: 2021,
                }, function (start, end, label) {
                    console.log("A new date selection was made: " + start.format('YYYY/MM/DD') + ' to ' + end.format('YYYY/MM/DD'));
                    console.log(start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));

                    sdate = start.format('YYYY/MM/DD');
                    edate = end.format('YYYY/MM/DD');
                    localStorage.setItem("selHar", sdate);
                    localStorage.setItem("selHarE", edate);

                    rgn = $("#region option:selected").text();
                    localStorage.setItem("selRgn", rgn);

                    kmj = $("#kmuj option:selected").text();
                    localStorage.setItem("selKmj", kmj);

                    scn = $("#section option:selected").text();
                    localStorage.setItem("selScn", scn);

                    listReportsAdmin(localStorage.getItem("selRgn"), localStorage.getItem("selKmj"), localStorage.getItem("selScn"), sdate, edate);
                    salertSave('Update Date : ' + start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));
                });

                $("#region, #kmuj, #section, sdate, edate").on('change', function () {

                    checkStore();

                    var sdate = localStorage.setItem("selHar", sdate);
                    var edate = localStorage.setItem("selHarE", edate);

                    rgn = $("#region option:selected").text();
                    localStorage.setItem("selRgn", rgn);

                    kmj = $("#kmuj option:selected").text();
                    localStorage.setItem("selKmj", kmj);

                    scn = $("#section option:selected").text();
                    localStorage.setItem("selScn", scn);

                    listReportsAdmin(localStorage.getItem("selRgn"), localStorage.getItem("selKmj"), localStorage.getItem("selScn"), sdate, edate);
                });
            }

            //userlevel == 4
            else if ((localStorage.getItem("lvlI") === "4") || (localStorage.getItem("lvlI") === "3")) {
                $("#contentNormal").show();
                $("#contentAdmin").hide();
                $("#contentOthers").hide();

                $('#txtDate3').daterangepicker({

                    minYear: 2021,
                    opens: 'right'

                }, function (start, end, label) {
                    console.log("A new date selection was made: " + start.format('YYYY/MM/DD') + ' to ' + end.format('YYYY/MM/DD'));
                    console.log(start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));

                    sdate = start.format('YYYY/MM/DD');
                    edate = end.format('YYYY/MM/DD');

                    localStorage.setItem("selHar", sdate);
                    localStorage.setItem("selHarE", edate);

                    scn = localStorage.getItem("scn");
                    localStorage.setItem("selScn", scn, this.value);


                    listReportsNormal(localStorage.getItem("selScn", this.value), sdate, edate);
                    salertSave('Update Date : ' + start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));
                });

                $("sdate, edate").on('change', function () {

                    checkStore();

                    var sdate = localStorage.setItem("selHar", sdate);
                    var edate = localStorage.setItem("selHarE", edate);

                    scn = localStorage.getItem("scn");
                    localStorage.setItem("selScn", scn, this.value);

                    listReportsNormal(localStorage.getItem("selScn", this.value), sdate, edate);

                });
            }

            //not authorized user
            else {
                $("#contentAdmin").hide();
                $("#contentNormal").hide();
            }


            $("#datepicker, #dateEdit").datepicker({
                singleDatePicker: true,
                showDropdowns: true,
                minYear: 2021,
                locale: {
                    format: 'DD/MM/YYYY'
                }
            });

            $("#workEdit").on('change', function () {
                wrk = $("#workEdit option:selected").text();
                localStorage.setItem("selWrk", wrk, this.value);
                listWorkUnit(localStorage.getItem("selWrk", this.value));
            });

            //show/hide work catergory - emegergency
            $("#catEdit").on('change', function () {
                if ($("#catEdit option:selected").val() == '1') {
                    $("#catEmerEdit").show();
                }
                else {
                    $("#catEmerEdit").hide();
                }
            });

            //show gang pax based on gang type
            function listGangPax(kmuj, section, gang) {
                if (typeof gang === "string") {
                    gang = gang.split(/(?<=\d)(?=Gang)/);
                }

                if (Array.isArray(gang)) {
                    var gangString = gang.join(",");

                    $.ajax({
                        url: linkDepan + "GetGangPax",
                        data: {
                            Kmuj: kmuj,
                            Section: section,
                            Gang: gangString
                        },
                        dataType: "json",
                        beforeSend: function (request) {
                            request.setRequestHeader("Token", localStorage.getItem('main'));
                        },
                        success: function (data) {
                            if (data && data.length > 0) {
                                $('#gangno').val(data[0].count);
                            } else {
                                $('#gangno').val('0 pax');
                            }
                        },
                        error: function (error) {
                            $('#gangno').val("");
                        }
                    });
                } else {
                    return;
                }
            }


            $('#startKM, #endKM').on('change', function () {
                validateKM();
            });

            $('#startTime, #endTime').on('change', function () {
                validateTime();
            });

        });

       


        $('#modalDetails, #modalUpdate, #modalDelete').on('show.bs.modal', function (e) {
            var ids = $(e.relatedTarget).data('id');
            $(this).data('id', ids);
            console.log('read ' + ids);


            kmj = $("#kmuj option:selected").text();
            localStorage.setItem("selKmj", kmj, this.value);

            scn = $("#section option:selected").text();
            localStorage.setItem("selScn", scn, this.value);

            gng = $("#gang option:selected").text();
            localStorage.setItem("selGng", gng, this.value);

            listReports2(localStorage.getItem("selKmj", this.value), localStorage.getItem("selScn", this.value), localStorage.getItem("selGng", this.value));
            rptDetails(ids);
            listGangPax(localStorage.getItem("selKmj", this.value), localStorage.getItem("selScn", this.value), localStorage.getItem("selGng", this.value));
        });

        //button submit update report
        $("#submitUpdate").click(function () {
            var ids = $('#modalUpdate').data('id');
            console.log('read ' + ids);
            rptUpdate(ids);
        });

        //modal delete report
        $('#submitDelete').click(function () {
            var ids = $('#modalDelete').data('id');
            console.log('read ' + ids);
            rptDelete(ids);
        });

        //delete modal
        $('#modalDelete').on('show.bs.modal', function (e) {
            var ids = $(e.relatedTarget).data('id');
            var code = $(".code" + ids).html();
            $.ajax({
                url: linkDepan + "GetReportDetails?RptCode=" + ids,
                type: 'GET',
                dataType: 'json',
                data: {},
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    $('#reportno').val(data[0].rpt_code);
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        });

       

        function rptDetails(ids) {
            var reportno = $(".reportno" + ids).html();
            $.ajax({
                url: linkDepan + "GetAllFormDetails?RptCode=" + ids,
                type: 'GET',
                dataType: 'json',
                data: {},
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    $('#rptcode, #rptcode2').val(data[0].rpt_code);
                    $('#region, #region2').val(data[0].region_name);
                    $('#kmuj, #kmuj2').val(data[0].kmuj_name);
                    $('#section, #section2').val(data[0].section_name);
                    $('#gang, #gang2').val(data[0].Gang);
                    $('#pax, #pax2').val(data[0].daily_workers);
                    $('#workdate, #datepicker').val(data[0].daily_date);
                    $('#linecond, #linecond2').val(data[0].cond_name);
                    $('#category, #category2').val(data[0].category_name);
                    $('#categorydets, #categorydets2').val(data[0].category_details);
                    $('#worktype, #worktype2').val(data[0].work_name);
                    $('#totalWork, #totalWork2').val(data[0].daily_total);
                    $('#unit, #unit2').val(data[0].daily_unit);
                    $('#KMfrom, #KMfrom2').val(data[0].effect_kmfrom);
                    $('#KMto, #KMto2').val(data[0].effect_kmto);
                    $('#totalKM, #totalKM2').val(data[0].effect_kmtotal);
                    $('#timeStart, #timeStart2').val(data[0].daily_timestart);
                    $('#timeEnd, #timeEnd2').val(data[0].daily_timelast);
                    $('#totalTime, #totalTime2').val(data[0].daily_timetaken);
                    $('#notes, #notes2').val(data[0].daily_additional);
                    $('#workStation, #workStation2').val(data[0].station);
                    $('#stPoint, #stPoint2').val(data[0].station_point);

                    var kmuj2 = $('#kmuj').val();
                    var section2 = $('#section').val();
                    var gang2 = $('#gang2').val();

                    console.log('gang2:', gang2);
                    console.log('kmuj2:', kmuj2);
                    console.log('section2:', section2);

                    // Call listReports2 with the fetched values
                    listReports2(kmuj2, section2, gang2);
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        //show gang pax based on gang type
        function listGangPax(kmuj, section, gang) {
            if (typeof gang === "string") {
                gang = gang.split(/(?<=\d)(?=Gang)/);
            }

            if (Array.isArray(gang)) {
                var gangString = gang.join(",");

                $.ajax({
                    url: linkDepan + "GetGangPax",
                    data: {
                        Kmuj: kmuj,
                        Section: section,
                        Gang: gangString
                    },
                    dataType: "json",
                    beforeSend: function (request) {
                        request.setRequestHeader("Token", localStorage.getItem('main'));
                    },
                    success: function (data) {
                        if (data && data.length > 0) {
                            $('#gangno2, #gangEdit').val(data[0].count);
                        } else {
                            $('#gangno2, #gangEdit').val('0 pax');
                        }
                    },
                    error: function (error) {
                        $('#gangno2').val("");
                    }
                });
            } else {
                return;
            }
        }

        function rptDelete(ids) {
            console.log("Deleting report with ID:", ids);
            var data = {
                RptCode: ids,
            };
            $.ajax({
                url: linkDepan + "DeleteReport?RptCode=" + ids,
                type: 'DELETE',
                contentType: 'application/json',
                data: JSON.stringify(data),
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (response) {
                    var data;
                    try {
                        data = JSON.parse(response);
                    } catch (error) {
                        console.error("Error parsing JSON:", error);
                        swarning();
                        return;
                    }
                    if (data && data.status === "00") {
                        $('#modalDelete').modal('hide');
                        swal.fire('Success!', 'Report has been deleted.', 'success');
                    } else {
                        $('#modalDelete').modal('hide');
                        swarning();
                    }
                    if (localStorage.getItem("lvlI") === "1" || localStorage.getItem("lvlI") === "5") {
                        listReports(
                            localStorage.getItem("selRgn"),
                            localStorage.getItem("selKmj"),
                            localStorage.getItem("selScn"),
                            localStorage.getItem("selHar"),
                            localStorage.getItem("selHarE")
                        );
                    } else if (localStorage.getItem("lvlI") === "2" || localStorage.getItem("lvlI") === "6") {
                        listReportsEngineer(
                            localStorage.getItem("selRgn"),
                            localStorage.getItem("selCtg"),
                            localStorage.getItem("selKmj"),
                            localStorage.getItem("selHar"),
                            localStorage.getItem("selHarE")
                        );
                    } else if (localStorage.getItem("lvlI") === "3") {
                        listReportsCI(
                            localStorage.getItem("selCtg"),
                            localStorage.getItem("selScn"),
                            localStorage.getItem("selHar"),
                            localStorage.getItem("selHarE")
                        );
                    } else if (localStorage.getItem("lvlI") === "4") {
                        listReportsNormal(
                            localStorage.getItem("selScn"),
                            localStorage.getItem("selHar"),
                            localStorage.getItem("selHarE")
                        );
                    } else {
                        $("#contentAdmin").hide();
                        $("#contentEngineer").hide();
                        $("#contentNormal").hide();
                        $("#contentCI").hide();
                        $("#contentOthers").show();
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error Status:", status);
                    console.error("Error Thrown:", error);
                    console.error("Response Text:", xhr.responseText);
                    swarning();
                },
                complete: function () {
                    console.log("Request completed");
                }
            });
        }


        function listSection() {
            $.ajax({
                url: linkDepan + "GetSectionList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.section_id + "'>" + value.section_name + "</option>";
                        });
                        $('#section, #sec').append(auxArr.join(''));
                    } else {
                        $("#section. #sec").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listKMUJ() {
            $.ajax({
                url: linkDepan + "KMUJList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.kmuj_id + "'>" + value.kmuj_name + "</option>";
                        });
                        $('#kmuj').append(auxArr.join(''));
                    } else {
                        $("#kmuj").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listRegion() {
            $.ajax({
                url: linkDepan + "GetRegionList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.region_id + "'>" + value.region_name + "</option>";
                        });
                        $('#region').append(auxArr.join(''));
                    } else {
                        $("#region").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listWorkUnit(workunit) {
            $.ajax({
                url: linkDepan + "GetWorkUnit?WorkUnit=" + workunit,
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data && Array.isArray(data) && data.length > 0) {
                        $('#unit').val(data[0].unit);
                    }
                },
            });
        }

        function listLnCondition() {
            $.ajax({
                url: linkDepan + "GetLineConditionList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.cond_id + "'>" + value.cond_name + "</option>";
                        });
                        $('#linecondition, #linecondEdit').append(auxArr.join(''));
                    } else {
                        $("#linecondition, #linecondEdit").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listCategory() {
            $.ajax({
                url: linkDepan + "GetCategory",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.category_id + "'>" + value.category_name + "</option>";
                        });
                        $('#category2, #catEdit').append(auxArr.join(''));
                    } else {
                        $("#category2, #catEdit").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listCatDetails() {
            $.ajax({
                url: linkDepan + "GetCategoryDetails",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.id + "'>" + value.details + "</option>";
                        });
                        $('#categorydets2, #catDetEdit').append(auxArr.join(''));
                    } else {
                        $("#categorydets2, #catDetEdit").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listWorkType() {
            $.ajax({
                url: linkDepan + "GetWorkType",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.id + "'>" + value.work_name + "</option>";
                        });
                        $('#worktype2, #workEdit').append(auxArr.join(''));
                    } else {
                        $("#worktype2, #workEdit").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listLocation() {
            $.ajax({
                url: linkDepan + "GetLocation",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.LCN_CODE + "'>" + value.LCN_NAME + "</option>";
                        });
                        $('#stationn, #stEdit').append(auxArr.join(''));
                    } else {
                        $("#stationn, #stEdit").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listGang() {
            $.ajax({
                url: linkDepan + "GangList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.id + "'>" + value.gang + "</option>";
                        });
                        $('#ganglist, #gangEdit').append(auxArr.join(''));
                    } else {
                        $("#ganglist, #gangEdit").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }




        function listReports2(kmuj, section, gang) {
            if (typeof gang === "string") {
                gang = gang.split(/(?<=\d)(?=Gang)/);
            }
            if (Array.isArray(gang) && gang.length > 0) {
                var gangString = gang.join(",");
                $.ajax({
                    url: linkDepan + "GetGListNormal?Kmuj=" + kmuj + "&Section=" + section + "&Gang=" + encodeURIComponent(gangString),
                    type: 'GET',
                    dataType: 'json',
                    data: {},
                    beforeSend: function (request) {
                        request.setRequestHeader("Token", localStorage.getItem('main'));
                    },
                    success: function (response) {
                        try {
                            // Log the response to inspect it
                            console.log("Server Response:", response);
                            console.log("Gang String: " + gangString); // Corrected the variable name

                            // Initialize DataTable with the correct column definitions
                            var counter = 1;
                            $.fn.dataTable.ext.errMode = 'throw';
                            if ($.fn.dataTable.isDataTable('#tableRep2')) {
                                $('#tableRep2').DataTable().destroy();
                                $('#tableRep2').empty(); // Clear the table contents
                            }
                            $('#tableRep2').DataTable({
                                responsive: true,
                                data: response,
                                columns: [
                                    { data: "Emplid" },
                                    { data: "Emplid" },
                                    { data: "Nama" },
                                    { data: "JobGrade" },
                                    { data: "JobDesc" },
                                    { data: "Gang" },
                                    { data: "cuti_name" },
                                ],
                                columnDefs: [
                                    {
                                        targets: -1,
                                        title: "Status",
                                        render: function (data, type, full, meta) {
                                            var status = '';
                                            if (data == 'VALID') {
                                                status = '<a class="text-success">' + data + ' <i class="ion-checkmark-circled"></i></a></p>';
                                            } else {
                                                status = '<a class="text-danger">' + data + ' <i class="ion-close-circled"></i></a></p>';
                                            }
                                            return status;
                                        },
                                    },
                                    {
                                        targets: -2,
                                        title: "Gang",
                                        render: function (data, type, full, meta) {
                                            return data;
                                        },
                                    },
                                    {
                                        targets: -3,
                                        title: "Position",
                                        render: function (data, type, full, meta) {
                                            return data;
                                        },
                                    },
                                    {
                                        targets: -4,
                                        title: "Grade",
                                        render: function (data, type, full, meta) {
                                            return data;
                                        },
                                    },
                                    {
                                        targets: -5,
                                        title: "Name",
                                        render: function (data, type, full, meta) {
                                            return data;
                                        },
                                    },
                                    {
                                        targets: -6,
                                        title: "Staff ID",
                                        render: function (data, type, full, meta) {
                                            return data;
                                        },
                                    },
                                    {
                                        targets: -7,
                                        title: "No",
                                        render: function (data, type, full, meta) {
                                            return counter++;
                                        }
                                    }
                                ],
                                createdRow: function (row, data, dataIndex) {
                                    $('td', row).addClass('text-nowrap align-middle');
                                }
                            });
                        } catch (error) {
                            console.error("Error parsing JSON:", error);
                            if ($.fn.dataTable.isDataTable('#tableRep2')) {
                                $('#tableRep2').DataTable().destroy();
                                $('#tableRep2').empty(); // Clear the table contents
                            }
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error("AJAX request failed:", textStatus, errorThrown);
                        if ($.fn.dataTable.isDataTable('#tableRep2')) {
                            $('#tableRep2').DataTable().destroy();
                            $('#tableRep2').empty(); // Clear the table contents
                        }
                    }
                });

            }
        }

        //report admin
        function listReportsAdmin(region, kmuj, section, mdate, edate) {
            if (mdate === undefined) {
                var arrBuln = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', '06', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];
                var d = new Date();
                var month = d.getMonth() - 1;
                mdate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear();
                localStorage.setItem("selHar", mdate);
                localStorage.setItem("selScn", scn, this.value);
            }
            if (edate === undefined) {
                var arrBuln = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', '06', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];
                var d = new Date();
                var month = d.getMonth();
                edate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear(); console.log(edate);
                localStorage.setItem("selHarE", edate);
                localStorage.setItem("selScn", scn, this.value);
            }

            var url = linkDepan + "GetDailyReport?SDate=" + mdate + "&EDate=" + edate;
            if (region) url += "&Region=" + region;
            if (kmuj) url += "&Kmuj=" + kmuj;
            if (section) url += "&Section=" + section;

            $.ajax({
                url: url,
                type: 'GET',
                dataType: 'json',
                data: {},
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    console.log('mana : ' + data);
                    var counter = 1;
                    $.fn.dataTable.ext.errMode = 'throw';
                    if ($.fn.dataTable.isDataTable("#tableAdmin")) {
                        $("#tableAdmin").DataTable().destroy();
                    }
                    $("#tableAdmin").DataTable({
                        dom: 'Bfrtip',
                        buttons: [
                            'copy', 'csv', 'excel', 'pdf', 'print'
                        ],
                        responsive: true,
                        data: data,
                        columns: [
                            { data: "no" },
                            { data: "rpt_code" },
                            { data: "daily_date" },
                            { data: "upd_user" },
                            { data: "upd_date" },
                            { data: "section_name" },
                            { data: "rpt_code" },
                        ],
                        columnDefs: [
                            {
                                targets: -1,
                                title: "Action",
                                render: function (data, type, full, meta) {
                                    return '<a class="modal-effect btn btn-success" data-id="' + data + '" data-bs-target="#modalDetails" data-bs-effect="effect-sign" data-bs-toggle="modal"><i class="fe fe-eye font-10"></i></a>' +
                                        ' <a class="btn btn-primary" href="Form.cshtml?id=' + data + '"><i class="fe fe-edit font-10"></i></a>' +
                                        ' <a class="btn btn-danger" data-id="' + data + '" data-bs-target="#modalDelete" data-bs-effect="effect-sign" data-bs-toggle="modal"><i class="fe fe-trash font-10"></i></a>';
                                },
                            },
                            {
                                targets: -2,
                                title: "Section",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -3,
                                title: "Update Date",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -4,
                                title: "Submitted By",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -5,
                                title: "Work Date",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -6,
                                title: "Report ID",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -7,
                                title: "No",
                                render: function (data, type, full, meta) {
                                    return counter++;
                                },
                            }
                        ],
                        createdRow: function (row, data, dataIndex) {
                            $('td', row).addClass('text-nowrap align-middle');
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error('Error: ' + error);
                    console.error('Status: ' + status);
                    console.dir(xhr);
                    swarning();
                },
                complete: function () {
                }
            });
        }

        //report normal
        function listReportsNormal(section, mdate, edate) {
            if (mdate === undefined) {
                var month = d.getMonth() - 1;
                if (month < 0) month = 11; // Handle January case
                mdate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear();
                localStorage.setItem("selHar", mdate);
                localStorage.setItem("selScn", section);
            }

            if (edate === undefined) {
                var month = d.getMonth();
                edate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear();
                console.log('edate ialah: ' + edate);
                localStorage.setItem("selHarE", edate);
                localStorage.setItem("selScn", section);
            }

            $.ajax({
                url: linkDepan + "GetDailyReportNormal?Section=" + section + "&SDate=" + mdate + "&Edate=" + edate,
                type: 'GET',
                dataType: 'json',
                data: {},
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    console.log('mana : ' + data);
                    var counter = 1;
                    $.fn.dataTable.ext.errMode = 'throw';
                    if ($.fn.dataTable.isDataTable("#tableNormal")) {
                        $("#tableNormal").DataTable().destroy();
                    }
                    $("#tableNormal").DataTable({
                        dom: 'Bfrtip',
                        buttons: [
                            'copy', 'csv', 'excel', 'pdf', 'print'
                        ],
                        responsive: true,
                        data: data,
                        columns: [
                            { data: "no" },
                            { data: "rpt_code" },
                            { data: "daily_date" },
                            { data: "upd_user" },
                            { data: "upd_date" },
                            { data: "section_name" },
                            { data: "rpt_code" },
                        ],
                        columnDefs: [
                            {
                                targets: -1,
                                title: "Action",
                                render: function (data, type, full, meta) {
                                    return '<a class="modal-effect btn btn-success" data-id="' + data + '" data-bs-target="#modalDetails" data-bs-effect="effect-sign" data-bs-toggle="modal"><i class="fe fe-eye font-10"></i></a>' +
                                        ' <a class="btn btn-primary" href="Form?id=' + data + '"><i class="fe fe-edit font-10"></i></a>' +
                                        ' <a class="btn btn-danger" data-id="' + data + '" data-bs-target="#modalDelete" data-bs-effect="effect-sign" data-bs-toggle="modal"><i class="fe fe-trash font-10"></i></a>';
                                },
                            },
                            {
                                targets: -2,
                                title: "Section",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -3,
                                title: "Update Date",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -4,
                                title: "Submitted By",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -5,
                                title: "Work Date",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -6,
                                title: "Report ID",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -7,
                                title: "No",
                                render: function (data, type, full, meta) {
                                    return counter++;
                                },
                            }
                        ],
                        createdRow: function (row, data, dataIndex) {
                            $('td', row).addClass('text-nowrap align-middle');
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error('Error: ' + error);
                    console.error('Status: ' + status);
                    console.dir(xhr);
                    swarning();
                },
                complete: function () {
                }
            });
        }


    </script>
}


