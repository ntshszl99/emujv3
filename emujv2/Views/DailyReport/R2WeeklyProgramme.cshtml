
@{
    ViewBag.Title = "R2WeeklyProgramme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="app-content main-content">
    <div class="side-app">
        <div class="container-fluid main-container">
            <!--Page header-->
            <div class="page-header">
                <div class="page-leftheader">
                    <h4 class="page-title">Weekly Programme (R2)</h4>
                </div>
            </div>
            <div class="" id="contentAdmin">
                <div class="card">
                    <div class="card-body">
                        <div class="mb-3 m-0">
                            <div class="row">
                                <div class="col-4">
                                    <label class="mt-3 form-label">KMUJ</label>
                                    <select id="kmuj" class="form-control form-select select2">
                                        <option value="-0">Select KMUJ</option>
                                    </select>
                                </div>
                                <div class="col-4">
                                    <label class="mt-3 form-label">Section</label>
                                    <select id="section" class="form-control form-select select2">
                                        <option value="-0">Select Section</option>
                                    </select>
                                </div>
                                <div class="col-4">
                                    <label class="mt-3 form-label">Date (From - To)</label>
                                    <div class="input-group">
                                        <div class="input-group-append">
                                            <span class="input-group-text"><i class=" mt-1 mb-1 fa fa-solid fa fa-calendar font-20"></i></span>
                                        </div>
                                        <input type="text" class="form-control" id="txtDate" name="txtDate" required="required" autocomplete="off" />
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="col-lg-12">
                                        <div class="col 4">
                                            <div id="selectedValues" class="mb-3"></div>
                                        </div>
                                        <div class="table-responsive table-lg">
                                            <table id="tableRep" class="table table-bordered text-nowrap hover">
                                                <thead></thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script src="~/assets/scripts/dashboard.js"></script>
    <script src="~/assets/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/assets/plugins/select2/select2.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            checkSess();
            listSection();
            listKMUJ();
            listReports();


        });

        function listSection() {
            $.ajax({
                url: linkDepan + "GetSectionList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.section_id + "'>" + value.section_name + "</option>";
                        });
                        $('#section').append(auxArr.join(''));
                    } else {
                        $("#section").addClass(" is-invalid");
                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () { }
            });
        }

        function listKMUJ() {
            $.ajax({
                url: linkDepan + "KMUJList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.kmuj_id + "'>" + value.kmuj_name + "</option>";
                        });
                        $('#kmuj').append(auxArr.join(''));
                    } else {
                        $("#kmuj").addClass(" is-invalid");
                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () { }
            });
        }

        function listReports() {
            $.ajax({
                url: linkDepan + "GetKerja",
                type: 'GET',
                dataType: 'json',
                data: {},
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    var counter = 1, countStf = 0, countID = 0;
                    console.log(data);
                    $.fn.dataTable.ext.errMode = 'throw';
                    if ($.fn.dataTable.isDataTable('#tableRep')) {
                        $('#tableRep').DataTable().destroy();
                    }
                    $.fn.dataTable.ext.errMode = 'throw';

                    $('#tableRep').DataTable({
                        ordering: false,
                        paging: false,
                        dom: 'Bfrtip',
                        buttons: [
                            'copy', 'csv', 'excel', 'pdf', 'print'
                        ],
                        responsive: true,
                        data: data,
                        columns: [
                            { data: "number" },
                            { data: "work_category" },
                            { data: "work_name" },
                        ],
                        columnDefs: [{
                            targets: -1,
                            title: "Work Description",
                            render: function (data, type, full, meta) {
                                return data;
                            },
                        },
                        {
                            targets: -2,
                            title: "Category",
                            render: function (data, type, full, meta) {
                                return data;
                            },
                        },
                        {
                            targets: -3,
                            title: "No",
                            render: function (data, type, full, meta) {
                                return meta.row + 1; // Display row number in ascending order
                            },
                        }],
                        createdRow: function (row, data, dataIndex) {
                            $('td', row).addClass('text-nowrap align-middle');
                        },
                        drawCallback: function (settings) {
                            let table = $('#tableRep').DataTable();

                            // Helper function to merge cells
                            function mergeCells(startRow, endRow, colIndex, dataIndex, mergedContent = null) {
                                let cell = $(table.cell(startRow, colIndex).node());
                                let content = mergedContent !== null ? mergedContent : data[startRow][dataIndex];
                                cell.attr('rowspan', endRow - startRow + 1).html(content);
                                for (let i = startRow + 1; i <= endRow; i++) {
                                    $(table.row(i).node()).find('td:eq(' + colIndex + ')').remove();
                                }
                            }

                            // Merge the 3rd - 8th rows of work_category
                            if (data.length >= 8) {
                                mergeCells(2, 7, 1, 'work_category');
                                mergeCells(2, 7, 0, 'number', '3');
                            }

                            // Merge the 9th-13th rows of work_category
                            if (data.length >= 13) {
                                mergeCells(8, 12, 1, 'work_category');
                                mergeCells(8, 12, 0, 'number', '4'); // Set the merged content to '4'
                            }

                            // Merge the 14th-17th rows of work_category
                            if (data.length >= 17) {
                                mergeCells(13, 16, 1, 'work_category');
                                mergeCells(13, 16, 0, 'number', '5');
                            }

                            // Merge the 18th-23rd rows of work_category
                            if (data.length >= 23) {
                                mergeCells(17, 22, 1, 'work_category');
                                mergeCells(17, 22, 0, 'number', '6');
                            }

                            // Merge the 24th-31st rows of work_category
                            if (data.length >= 31) {
                                mergeCells(23, 30, 1, 'work_category');
                                mergeCells(23, 30, 0, 'number', '7');
                            }

                            // Merge the 32nd-37th rows of work_category
                            if (data.length >= 37) {
                                mergeCells(31, 36, 1, 'work_category');
                                mergeCells(31, 36, 0, 'number', '8');
                            }

                            if (data.length == 38 ) {
                                mergeCells(37, 37, 0, 'number', '9');   // 0-based index for the 38th row
                            }


                            // Merge the 39th-40th rows of work_category
                            if (data.length >= 40) {
                                mergeCells(38, 39, 1, 'work_category');
                                mergeCells(38, 39, 0, 'number', '10');
                            }

                            // Merge the 41st-42nd rows of work_category
                            if (data.length >= 42) {
                                mergeCells(40, 41, 1, 'work_category');
                                mergeCells(40, 41, 0, 'number', '11');
                            }

                            // Merge the 43rd-60th rows of work_category
                            if (data.length >= 60) {
                                mergeCells(42, 59, 1, 'work_category');
                                mergeCells(42, 59, 0, 'number', '12');
                            }
                        }
                    });
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }





    </script>
}




