@{
    ViewBag.Title = "Daily Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/assets/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
<div class="app-content main-content">
    <div class="side-app">
        <div class="container-fluid main-container">

            <!--Page header-->
            <div class="page-header">
                <div class="page-leftheader">
                    <h4 class="page-title">Daily Report</h4>
                </div>
            </div>
            <!--End Page header-->
            <!--1-Admin && 5-HQ-->
            <div class="" id=contentAdmin>
                <div class="col-lg-12 col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="mb-3 m-0">
                                <div class="row">
                                    <div class="col-3">
                                        <label class="mt-5 form-label">Region</label>
                                        <select id="region" class="form-control form-select select2">
                                            <option value="-0">Select Region</option>
                                        </select>
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label">KMUJ</label>
                                        <select id="kmuj" class="form-control form-select select2">
                                            <option value="-0">Select KMUJ</option>
                                        </select>
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label">Section</label>
                                        <select id="section" class="form-control form-select select2">
                                            <option value="-0">Select Section</option>
                                        </select>
                                    </div>

                                    <div class="col-3">
                                        <label class="mt-5 form-label">Work Date (From - To)</label>
                                        <div class="input-group">
                                            <div class="input-group-append">
                                                <span class="input-group-text"><i class=" mt-1 mb-1 fa fa-solid fa fa-calendar font-20"></i></span>
                                            </div>
                                            <input type="text" class="form-control" id="txtDate" name="txtDate" required="required" autocomplete="off" />
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="col-lg-12">
                                            <div class="table-responsive table-lg">
                                                <table id="tableAdmin" class="table table-striped table-bordered text-nowrap">
                                                    <thead>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--2-Engineer && 6-Pemb.Teknik-->
            <div class="" id=contentEngineer>
                <div class="col-lg-12 col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="mb-3 m-0">
                                <div class="row">
                                    <div class="col-4">
                                        <label class="mt-5 form-label">Category</label>
                                        <select id="categoryEng" class="form-control form-select select2">
                                            <option value="-0">Select Category</option>
                                        </select>
                                    </div>
                                    <div class="col-4">
                                        <label class="mt-5 form-label">KMUJ</label>
                                        <select id="kmujEng" class="form-control form-select select2">
                                            <option value="-0">Select KMUJ</option>
                                        </select>
                                    </div>
                                    <div class="col-4">
                                        <label class="mt-5 form-label">Work Date (From - To)</label>
                                        <div class="input-group">
                                            <div class="input-group-append">
                                                <span class="input-group-text"><i class=" mt-1 mb-1 fa fa-solid fa fa-calendar font-20"></i></span>
                                            </div>
                                            <input type="text" class="form-control" id="txtDate4" name="txtDate4" required="required" autocomplete="off" />
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="col-lg-12">
                                            <div class="table-responsive table-lg">
                                                <table id="tableEngineer" class="table card-table table-vcenter text-nowrap border">
                                                    <thead>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--3-CI-->
            <div class="" id=contentCI>
                <div class="col-lg-12 col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="mb-3 m-0">
                                <div class="row">
                                    <div class="col-3">
                                        <label class="mt-5 form-label">Gang</label>
                                        <select id="gangCI" class="form-control form-select select2">
                                            <option value="-0">Select Gang</option>
                                        </select>
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label">Category</label>
                                        <select id="categoryCI" class="form-control form-select select2">
                                            <option value="-0">Select Category</option>
                                        </select>
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label">Section</label>
                                        <select id="secCI" class="form-control form-select select2" required>
                                            <option value="-0">Select Section</option>
                                        </select>
                                    </div>
                                    <div class="col-3">
                                        <label class="mt-5 form-label">Work Date (From - To)</label>
                                        <div class="input-group">
                                            <div class="input-group-append">
                                                <span class="input-group-text"><i class=" mt-1 mb-1 fa fa-solid fa fa-calendar font-20"></i></span>
                                            </div>
                                            <input type="text" class="form-control" id="txtDate2" name="txtDate2" required="required" autocomplete="off" />
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="col-lg-12">
                                            <div class="table-responsive table-lg">
                                                <table id="tableCI" class="table card-table table-vcenter text-nowrap border">
                                                    <thead>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--4-Normal-->
            <div class="" id="contentNormal">
                <div class="col-lg-12 col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="mb-3 m-0">
                                <div class="row">
                                    <div class="col-8">
                                        <div class="mt-2 form-label"></div>
                                    </div>
                                    <div class="d-flex justify-content-end">
                                        <div class="m-3  form-label">Work Date</div>
                                        <div class="col-3">
                                            <div class="input-group">
                                                <div class="input-group-append">
                                                    <span class="input-group-text"><i class=" mt-1 mb-1 fa fa-solid fa fa-calendar font-20"></i></span>
                                                </div>
                                                <input type="text" class="form-control" id="txtDate3" name="txtDate3" required="required" autocomplete="off" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="col-lg-12">
                                            <div class="table-responsive table-lg">
                                                <table id="tableNormal" class="table card-table table-vcenter text-nowrap border">
                                                    <thead>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>



            <!--Modal Delete Data-->
            <div class="modal fade" id="modalDelete" tabindex="-1" aria-labelledby="modalDeleteLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body text-center p-4">
                            <i class="fa fa-exclamation-circle fa-5x text-danger lh-1 mg-t-20 d-inline-block"></i>
                            <h3 class="text-danger">Warning! Are you sure? </h3>
                            <p class="mg-b-20 mg-x-20">You may not be able to recover this data.</p>
                            <h4 class="mt-5 text-danger">Report Number: </h4>
                            <input readonly id="reportno" type="text" class="mb-3 form-control text-center bg-transparent border-0">

                            <button id="submitDelete" class="btn btn-danger mb-5" type="button">Delete</button>
                            <button class="btn btn-light mb-5" data-bs-dismiss="modal" aria-label="Close" type="button">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





@section scripts{

    <script src="~/assets/scripts/dashboard.js"></script>
    <script src="~/assets/scripts/semua.js"></script>
    <script src="~/assets/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/assets/plugins/select2/select2.min.js"></script>
    <script src="~/assets/plugins/morris/morris.min.js"></script>
    <script src="~/assets/plugins/raphael/raphael.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            checkSess();
            listRegion();
            listKMUJ();
            listSection();
            listCategory();
            listGang();
            cariReg();
            cariSec();
            dapatRptCode();

            //CHECK USER LEVEL

            //user level == 1 & 5
            if (localStorage.getItem("lvlI") === "1" || localStorage.getItem("lvlI") === "5") {
                $("#contentAdmin").show();
                $("#contentNormal").hide();
                $("#contentEngineer").hide();
                $("#contentCI").hide();

                $('#txtDate').daterangepicker({
                    minYear: 2021,
                }, function (start, end, label) {
                    console.log("A new date selection was made: " + start.format('YYYY/MM/DD') + ' to ' + end.format('YYYY/MM/DD'));
                    console.log(start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));

                    sdate = start.format('YYYY/MM/DD');
                    edate = end.format('YYYY/MM/DD');
                    localStorage.setItem("selHar", sdate);
                    localStorage.setItem("selHarE", edate);

                    rgn = $("#region option:selected").text();
                    localStorage.setItem("selRgn", rgn);

                    kmj = $("#kmuj option:selected").text();
                    localStorage.setItem("selKmj", kmj);

                    scn = $("#section option:selected").text();
                    localStorage.setItem("selScn", scn);

                    listReports(localStorage.getItem("selRgn"), localStorage.getItem("selKmj"), localStorage.getItem("selScn"), sdate, edate);
                    salertSave('Update Date : ' + start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));
                });

                $("#region, #kmuj, #section, sdate, edate").on('change', function () {

                    checkStore();

                    var sdate = localStorage.setItem("selHar", sdate);
                    var edate = localStorage.setItem("selHarE", edate);

                    rgn = $("#region option:selected").text();
                    localStorage.setItem("selRgn", rgn);

                    kmj = $("#kmuj option:selected").text();
                    localStorage.setItem("selKmj", kmj);

                    scn = $("#section option:selected").text();
                    localStorage.setItem("selScn", scn);

                    listReports(localStorage.getItem("selRgn"), localStorage.getItem("selKmj"), localStorage.getItem("selScn"), sdate, edate);
                });
            }

            //userlevel == 3
            else if (localStorage.getItem("lvlI") === "3") {
                $("#contentAdmin").hide();
                $("#contentNormal").hide();
                $("#contentEngineer").hide();
                $("#contentCI").show();

                kmj = localStorage.getItem("kmuj");
                localStorage.setItem("selKmj", kmj);
                cariSec(localStorage.getItem("selKmj", this.value));

                $('#txtDate2').daterangepicker({
                    minYear: 2021,
                }, function (start, end, label) {
                    console.log("A new date selection was made: " + start.format('YYYY/MM/DD') + ' to ' + end.format('YYYY/MM/DD'));
                    console.log(start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));

                    sdate = start.format('YYYY/MM/DD');
                    edate = end.format('YYYY/MM/DD');
                    localStorage.setItem("selHar", sdate);
                    localStorage.setItem("selHarE", edate);

                    ctg = $("#categoryCI option:selected").text();
                    localStorage.setItem("selCtg", ctg);

                    sec = $("#sec option:selected").text();
                    localStorage.setItem("selScn", sec);

                    salertSave('Update Date : ' + start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));
                    listReportsCI(localStorage.getItem("selCtg", this.value), localStorage.getItem("selScn", this.value), sdate, edate);

                });

                $("sdate, edate").on('change', function () {

                    checkStore();

                    var sdate = localStorage.setItem("selHar", sdate);
                    var edate = localStorage.setItem("selHarE", edate);

                    ctg = $("#categoryCI option:selected").text();
                    localStorage.setItem("selCtg", ctg);

                    sec = $("#sec option:selected").text();
                    localStorage.setItem("selScn", sec);

                    salertSave('Update Date : ' + start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));
                    listReportsCI(localStorage.getItem("selCtg", this.value), localStorage.getItem("selScn", this.value), sdate, edate);

                });

            }

            //userlevel == 4
            else if (localStorage.getItem("lvlI") === "4") {
                $("#contentNormal").show();
                $("#contentAdmin").hide();
                $("#contentEngineer").hide();
                $("#contentCI").hide();

                $('#txtDate3').daterangepicker({

                    minYear: 2021,
                    opens: 'right'

                }, function (start, end, label) {
                    console.log("A new date selection was made: " + start.format('YYYY/MM/DD') + ' to ' + end.format('YYYY/MM/DD'));
                    console.log(start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));

                    sdate = start.format('YYYY/MM/DD');
                    edate = end.format('YYYY/MM/DD');

                    localStorage.setItem("selHar", sdate);
                    localStorage.setItem("selHarE", edate);

                    scn = localStorage.getItem("scn");
                    localStorage.setItem("selScn", scn, this.value);


                    listReportsNormal(localStorage.getItem("selScn", this.value), sdate, edate);
                    salertSave('Update Date : ' + start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));
                });

                $("sdate, edate").on('change', function () {

                    checkStore();

                    var sdate = localStorage.setItem("selHar", sdate);
                    var edate = localStorage.setItem("selHarE", edate);

                    scn = localStorage.getItem("scn");
                    localStorage.setItem("selScn", scn, this.value);

                    listReportsNormal(localStorage.getItem("selScn", this.value), sdate, edate);

                });
            }

            //userlevel == 2 & 6
            else if (localStorage.getItem("lvlI") === "2" || localStorage.getItem("lvlI") === "6") {
                $("#contentAdmin").hide();
                $("#contentNormal").hide();
                $("#contentCI").hide();
                $("#contentEngineer").show();

                rgn = localStorage.getItem("usrRE");
                //usrRE = east, central, south, north
                localStorage.setItem("selRgn", rgn);
                console.log('region: ' + rgn);

                rgn2 = localStorage.getItem("usrR");
                //usrRE = east, central, south, north
                localStorage.setItem("selRgn2", rgn2);
                console.log('region2: ' + rgn2);

                cariReg(localStorage.getItem("selRgn"));

                $('#txtDate4').daterangepicker({
                    minYear: 2021,
                }, function (start, end, label) {
                    console.log("A new date selection was made: " + start.format('YYYY/MM/DD') + ' to ' + end.format('YYYY/MM/DD'));
                    console.log(start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));

                    sdate = start.format('YYYY/MM/DD');
                    edate = end.format('YYYY/MM/DD');
                    localStorage.setItem("selHar", sdate);
                    localStorage.setItem("selHarE", edate);

                    rgn = localStorage.getItem("usrR");
                    localStorage.setItem("selRgn", rgn);
                    console.log('region: ' + rgn);

                    kmj = $("#kmujEng option:selected").text();
                    localStorage.setItem("selKmj", kmj);

                    ctg = $("#categoryEng option:selected").text();
                    localStorage.setItem("selCtg", ctg);

                    listReportsEngineer(localStorage.getItem("selRgn"), localStorage.getItem("selCtg"), localStorage.getItem("selKmj"), sdate, edate);
                    salertSave('Update Date : ' + start.format('YYYY/MM/DD') + ' - ' + end.format('YYYY/MM/DD'));
                });

                $("#categoryEng, #kmujEng, sdate, edate").on('change', function () {

                    checkStore();

                    var sdate = localStorage.setItem("selHar", sdate);
                    var edate = localStorage.setItem("selHarE", edate);

                    rgn = localStorage.getItem("usrR");
                    localStorage.setItem("selRgn", rgn);
                    console.log('region: ' + rgn);

                    kmj = $("#kmujEng option:selected").text();
                    localStorage.setItem("selKmj", kmj);

                    ctg = $("#categoryEng option:selected").text();
                    localStorage.setItem("selCtg", ctg);

                    listReportsEngineer(localStorage.getItem("selRgn"), localStorage.getItem("selCtg"), localStorage.getItem("selKmj"), sdate, edate);
                });
            }


            //not authorized user
            else {
                $("#contentAdmin").hide();
                $("#contentNormal").hide();
                $("#contentEngineer").hide();
                $("#contentCI").hide();
            }
        });

        //modal delete
        $('#modalDelete').on('show.bs.modal', function (e) {
            var ids = $(e.relatedTarget).data('id');
            $(this).data('id', ids);
            dapatRptCode(ids);
        });

        function dapatRptCode(ids) {
            $.ajax({
                url: linkDepan + "GetReportDetails?RptCode=" + ids,
                type: 'GET',
                dataType: 'json',
                data: {},
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        $('#reportno').val(data[0].rpt_code);
                    } else {
                        console.error('No data received');
                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        //modal delete user
        $('#submitDelete').click(function () {
            var ids = $('#modalDelete').data('id');
            console.log('read ' + ids);
            rptDelete(ids);
        });

        function rptDelete(ids) {
            console.log("Deleting report with ID:", ids);
            var data = {
                RptCode: ids,
            };
            $.ajax({
                url: linkDepan + "DeleteReport?RptCode=" + ids,
                type: 'DELETE',
                contentType: 'application/json',
                data: JSON.stringify(data),
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (response) {
                    var data;
                    try {
                        data = JSON.parse(response);
                    } catch (error) {
                        console.error("Error parsing JSON:", error);
                        swarning();
                        return;
                    }
                    if (data && data.status === "00") {
                        $('#modalDelete').modal('hide');
                        swal.fire('Success!', 'Report has been deleted.', 'success');
                    } else {
                        $('#modalDelete').modal('hide');
                        swarning();
                    }
                    if (localStorage.getItem("lvlI") === "1" || localStorage.getItem("lvlI") === "5") {
                        listReports(
                            localStorage.getItem("selRgn"),
                            localStorage.getItem("selKmj"),
                            localStorage.getItem("selScn"),
                            localStorage.getItem("selHar"),
                            localStorage.getItem("selHarE")
                        );
                    } else if (localStorage.getItem("lvlI") === "2" || localStorage.getItem("lvlI") === "6") {
                        listReportsEngineer(
                            localStorage.getItem("selRgn"),
                            localStorage.getItem("selCtg"),
                            localStorage.getItem("selKmj"),
                            localStorage.getItem("selHar"),
                            localStorage.getItem("selHarE")
                        );
                    } else if (localStorage.getItem("lvlI") === "3") {
                        listReportsCI(
                            localStorage.getItem("selCtg"),
                            localStorage.getItem("selScn"),
                            localStorage.getItem("selHar"),
                            localStorage.getItem("selHarE")
                        );
                    } else if (localStorage.getItem("lvlI") === "4") {
                        listReportsNormal(
                            localStorage.getItem("selScn"),
                            localStorage.getItem("selHar"),
                            localStorage.getItem("selHarE")
                        );
                    } else {
                        $("#contentAdmin").hide();
                        $("#contentEngineer").hide();
                        $("#contentNormal").hide();
                        $("#contentCI").hide();
                        $("#contentOthers").show();
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error Status:", status);
                    console.error("Error Thrown:", error);
                    console.error("Response Text:", xhr.responseText);
                    swarning();
                },
                complete: function () {
                    console.log("Request completed");
                }
            });
        }

        function listGang() {
            $.ajax({
                url: linkDepan + "GangList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.id + "'>" + value.gang + "</option>";
                        });
                        $("#gangCI, #gangEng").append(auxArr.join(''));
                    } else {
                        $("#gangCI, #gangEng").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listCategory() {
            $.ajax({
                url: linkDepan + "GetCategory",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.category_id + "'>" + value.category_name + "</option>";
                        });
                        $('#categoryCI, #categoryEng').append(auxArr.join(''));
                    } else {
                        $("#categoryCI, #categoryEng").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listRegion() {
            $.ajax({
                url: linkDepan + "GetRegionList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.region_id + "'>" + value.region_name + "</option>";
                        });
                        $('#region').append(auxArr.join(''));
                    } else {
                        $("#region").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listSection() {
            $.ajax({
                url: linkDepan + "GetSectionList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.section_id + "'>" + value.section_name + "</option>";
                        });
                        $('#section, #sec').append(auxArr.join(''));
                    } else {
                        $("#section. #sec").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function listKMUJ() {
            $.ajax({
                url: linkDepan + "KMUJList",
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.kmuj_id + "'>" + value.kmuj_name + "</option>";
                        });
                        $('#kmuj').append(auxArr.join(''));
                    } else {
                        $("#kmuj").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function cariReg(region) {
            $.ajax({
                url: linkDepan + "Reg?Region=" + region,
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.region_id + "'>" + value.kmuj_name + "</option>";
                        });
                        $('#kmujEng').append(auxArr.join(''));
                    } else {
                        $("#kmujEng").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        function cariSec(kmuj) {
            $.ajax({
                url: linkDepan + "Kmuj?Kmuj=" + kmuj,
                dataType: "json",
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    if (data.length >= 1) {
                        auxArr = [];
                        $.each(data, function (index, value) {
                            auxArr[index] = "<option value='" + value.section_id + "'>" + value.section_name + "</option>";
                        });
                        $('#secCI').append(auxArr.join(''));
                    } else {
                        $("#secCI").addClass(" is-invalid");

                    }
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }




        //report admin and normal
        function listReports(region, kmuj, section, mdate, edate) {
            var arrBuln = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];
            var d = new Date();

            if (mdate === undefined) {
                var month = d.getMonth() - 1;
                if (month < 0) month = 11; // Handle January case
                mdate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear();
                localStorage.setItem("selHar", mdate);
                localStorage.setItem("selRgn", region);
                localStorage.setItem("selKmj", kmuj);
                localStorage.setItem("selScn", section);
            }

            if (edate === undefined) {
                var month = d.getMonth();
                edate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear();
                console.log('edate ialah: ' + edate);
                localStorage.setItem("selHarE", edate);
                localStorage.setItem("selRgn", region);
                localStorage.setItem("selKmj", kmuj);
                localStorage.setItem("selScn", section);
            }

            var url = linkDepan + "GetDailyReport?SDate=" + mdate + "&EDate=" + edate;
            if (region) url += "&Region=" + region;
            if (kmuj) url += "&Kmuj=" + kmuj;
            if (section) url += "&Section=" + section;

            $.ajax({
                url: url,
                type: 'GET',
                dataType: 'json',
                data: {},
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    console.log('mana : ' + data);
                    var counter = 1;
                    $.fn.dataTable.ext.errMode = 'throw';
                    if ($.fn.dataTable.isDataTable("#tableAdmin")) {
                        $("#tableAdmin").DataTable().destroy();
                    }
                    $("#tableAdmin").DataTable({
                        dom: 'Bfrtip',
                        buttons: [
                            'copy', 'csv', 'excel', 'pdf', 'print'
                        ],
                        responsive: true,
                        data: data,
                        columns: [
                            { data: "no" },
                            { data: "region_name" },
                            { data: "kmuj_name" },
                            { data: "section_name" },
                            { data: "Gang" },
                            { data: "daily_date" },
                            { data: "work_name" },
                            { data: "output" },
                            { data: "effect_kmfrom" },
                            { data: "effect_kmto" },
                            { data: "daily_condition" },
                            { data: "daily_workers" },
                            { data: "daily_category" },
                            { data: "Time" },
                            { data: "daily_additional" },
                            { data: "rpt_code" },
                            { data: "rpt_code" },
                        ],
                        columnDefs: [
                            {
                                targets: -1,
                                title: "Action",
                                render: function (data, type, full, meta) {
                                    return '<a class="modal-effect btn btn-danger" data-id="' + data + '" data-bs-target="#modalDelete" data-bs-effect="effect-scale" data-bs-toggle="modal"><i class="fe fe-trash font-10"></i></a>';
                                },
                            },
                            {
                                targets: -2,
                                title: "Code",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -3,
                                title: "Additional Note",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -4,
                                title: "Time (Start-End)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -5,
                                title: "Category",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -6,
                                title: "Workers",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -7,
                                title: "Up/Dn",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -8,
                                title: "To (KM)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -9,
                                title: "From (KM)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -10,
                                title: "Output/Unit",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -11,
                                title: "Work Type",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -12,
                                title: "Date",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -13,
                                title: "Gang",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -14,
                                title: "MUJ",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -15,
                                title: "KMUJ",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -16,
                                title: "Region",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -17,
                                title: "No",
                                render: function (data, type, full, meta) {
                                    return counter++;
                                },
                            }],
                        createdRow: function (row, data, dataIndex) {
                            $('td', row).addClass('text-nowrap align-middle');
                        }
                    });
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        //report engineer
        function listReportsEngineer(region, category, kmuj, mdate, edate) {
            var arrBuln = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];
            var d = new Date();

            if (mdate === undefined) {
                var month = d.getMonth() - 1;
                if (month < 0) month = 11; // Handle January case
                mdate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear();
                localStorage.setItem("selHar", mdate);
                localStorage.setItem("selRgn", region);
                localStorage.setItem("selKmj", kmuj);
                localStorage.setItem("selCtg", category);
            }

            if (edate === undefined) {
                var month = d.getMonth();
                edate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear();
                console.log('edate ialah' + edate);
                localStorage.setItem("selHarE", edate);
                localStorage.setItem("selKmj", kmuj);
                localStorage.setItem("selCtg", category);
            }


            var url = linkDepan + "GetDailyReportEngineer?Region=" + region + "&SDate=" + mdate + "&EDate=" + edate;
            if (category) url += "&category=" + category;
            if (kmuj) url += "&Kmuj=" + kmuj;

            $.ajax({   
                url: url,
                type: 'GET',
                dataType: 'json',
                data: {},
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    console.log('mana : ' + data);
                    var counter = 1;
                    $.fn.dataTable.ext.errMode = 'throw';
                    if ($.fn.dataTable.isDataTable("#tableEngineer")) {
                        $("#tableEngineer").DataTable().destroy();
                    }
                    $("#tableEngineer").DataTable({
                        dom: 'Bfrtip',
                        buttons: [
                            'copy', 'csv', 'excel', 'pdf', 'print'
                        ],
                        responsive: true,
                        data: data,
                        columns: [
                            { data: "no" },
                            { data: "region_name" },
                            { data: "kmuj_name" },
                            { data: "section_name" },
                            { data: "Gang" },
                            { data: "daily_date" },
                            { data: "work_name" },
                            { data: "output" },
                            { data: "effect_kmfrom" },
                            { data: "effect_kmto" },
                            { data: "daily_condition" },
                            { data: "daily_workers" },
                            { data: "daily_category" },
                            { data: "Time" },
                            { data: "daily_additional" },
                            { data: "rpt_code" },
                            { data: "rpt_code" },
                        ],
                        columnDefs: [
                            {
                                targets: -1,
                                title: "Action",
                                render: function (data, type, full, meta) {
                                    return '<a class="modal-effect btn btn-danger" data-id="' + data + '" data-bs-target="#modalDelete" data-bs-effect="effect-scale" data-bs-toggle="modal"><i class="fe fe-trash font-10"></i></a>';
                                },
                            },
                            {
                                targets: -2,
                                title: "Code",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -3,
                                title: "Additional Note",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -4,
                                title: "Time (Start-End)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -5,
                                title: "Category",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -6,
                                title: "Workers",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -7,
                                title: "Up/Dn",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -8,
                                title: "To (KM)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -9,
                                title: "From (KM)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -10,
                                title: "Output/Unit",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -11,
                                title: "Work Type",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -12,
                                title: "Date",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -13,
                                title: "Gang",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -14,
                                title: "MUJ",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -15,
                                title: "KMUJ",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -16,
                                title: "Region",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -17,
                                title: "No",
                                render: function (data, type, full, meta) {
                                    return counter++;
                                },
                            }],
                        createdRow: function (row, data, dataIndex) {
                            $('td', row).addClass('text-nowrap align-middle');
                        }

                    });
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        //report ci
        function listReportsCI(category, section, mdate, edate) {
            if (mdate === undefined) {
                var arrBuln = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', '06', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];
                var d = new Date();
                var month = d.getMonth() - 1;
                mdate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear();
                localStorage.setItem("selHar", mdate);
                localStorage.setItem("selCtg", ctg, this.value);
                localStorage.setItem("selScn", scn, this.value);
            }
            if (edate === undefined) {
                var arrBuln = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', '06', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];
                var d = new Date();
                var month = d.getMonth();
                edate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear(); console.log(edate);
                localStorage.setItem("selHarE", edate);
                localStorage.setItem("selCtg", ctg, this.value);
                localStorage.setItem("selScn", scn, this.value);
            }
            $.ajax({
                url: linkDepan + "GetDailyReportCI?Category=" + category + "&Section=" + section + "&SDate=" + mdate + "&Edate=" + edate,
                type: 'GET',
                dataType: 'json',
                data: {},
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    console.log('mana : ' + data);
                    var counter = 1;
                    $.fn.dataTable.ext.errMode = 'throw';
                    if ($.fn.dataTable.isDataTable("#tableCI")) {
                        $("#tableCI").DataTable().destroy();
                    }
                    $("#tableCI").DataTable({
                        dom: 'Bfrtip',
                        buttons: [
                            'copy', 'csv', 'excel', 'pdf', 'print'
                        ],
                        responsive: true,
                        data: data,
                        columns: [
                            { data: "no" },
                            { data: "region_name" },
                            { data: "kmuj_name" },
                            { data: "section_name" },
                            { data: "Gang" },
                            { data: "daily_date" },
                            { data: "work_name" },
                            { data: "output" },
                            { data: "effect_kmfrom" },
                            { data: "effect_kmto" },
                            { data: "daily_condition" },
                            { data: "daily_workers" },
                            { data: "daily_category" },
                            { data: "Time" },
                            { data: "daily_additional" },
                            { data: "rpt_code" },
                            { data: "rpt_code" },
                        ],
                        columnDefs: [
                            {
                                targets: -1,
                                title: "Action",
                                render: function (data, type, full, meta) {
                                    return '<a class="modal-effect btn btn-danger" data-id="' + data + '" data-bs-target="#modalDelete" data-bs-effect="effect-scale" data-bs-toggle="modal"><i class="fe fe-trash font-10"></i></a>';
                                    //return '<a class="text-danger" >' + data + ' <i class="ion-close-circled"></i></a></p >';

                                },
                            },
                            {
                                targets: -2,
                                title: "Code",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -3,
                                title: "Additional Note",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -4,
                                title: "Time (Start-End)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -5,
                                title: "Category",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -6,
                                title: "Workers",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -7,
                                title: "Up/Dn",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -8,
                                title: "To (KM)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -9,
                                title: "From (KM)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -10,
                                title: "Output/Unit",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -11,
                                title: "Work Type",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -12,
                                title: "Date",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -13,
                                title: "Gang",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -14,
                                title: "MUJ",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -15,
                                title: "KMUJ",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -16,
                                title: "Region",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -17,
                                title: "No",
                                render: function (data, type, full, meta) {
                                    return counter++;
                                },
                            }],
                        createdRow: function (row, data, dataIndex) {
                            $('td', row).addClass('text-nowrap align-middle');
                        }

                    });
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

        //report normal
        function listReportsNormal(section, mdate, edate) {
            if (mdate === undefined) {
                var arrBuln = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', '06', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];
                var d = new Date();
                var month = d.getMonth() - 1;
                mdate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear();
                localStorage.setItem("selHar", mdate);
                localStorage.setItem("selScn", scn, this.value);
            }
            if (edate === undefined) {
                var arrBuln = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', '06', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];
                var d = new Date();
                var month = d.getMonth();
                edate = d.getDate() + '/' + arrBuln[month] + '/' + d.getFullYear(); console.log(edate);
                localStorage.setItem("selHarE", edate);
                localStorage.setItem("selScn", scn, this.value);
            }
            $.ajax({
                url: linkDepan + "GetDailyReportNormal?Section=" + section + "&SDate=" + mdate + "&Edate=" + edate,
                type: 'GET',
                dataType: 'json',
                data: {},
                beforeSend: function (request) {
                    request.setRequestHeader("Token", localStorage.getItem('main'));
                },
                success: function (data) {
                    console.log('mana : ' + data);
                    var counter = 1;
                    $.fn.dataTable.ext.errMode = 'throw';
                    if ($.fn.dataTable.isDataTable("#tableNormal")) {
                        $("#tableNormal").DataTable().destroy();
                    }
                    $("#tableNormal").DataTable({
                        dom: 'Bfrtip',
                        buttons: [
                            'copy', 'csv', 'excel', 'pdf', 'print'
                        ],
                        responsive: true,
                        data: data,
                        columns: [
                            { data: "no" },
                            { data: "region_name" },
                            { data: "kmuj_name" },
                            { data: "section_name" },
                            { data: "Gang" },
                            { data: "daily_date" },
                            { data: "work_name" },
                            { data: "output" },
                            { data: "effect_kmfrom" },
                            { data: "effect_kmto" },
                            { data: "daily_condition" },
                            { data: "daily_workers" },
                            { data: "daily_category" },
                            { data: "Time" },
                            { data: "daily_additional" },
                            { data: "rpt_code" },
                            { data: "rpt_code" },
                        ],
                        columnDefs: [
                            {
                                targets: -1,
                                title: "Action",
                                render: function (data, type, full, meta) {
                                    return '<a class="modal-effect btn btn-danger" data-id="' + data + '" data-bs-target="#modalDelete" data-bs-effect="effect-scale" data-bs-toggle="modal"><i class="fe fe-trash font-10"></i></a>';
                                    //return '<a class="text-danger" >' + data + ' <i class="ion-close-circled"></i></a></p >';

                                },
                            },
                            {
                                targets: -2,
                                title: "Code",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -3,
                                title: "Additional Note",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -4,
                                title: "Time (Start-End)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -5,
                                title: "Category",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -6,
                                title: "Workers",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -7,
                                title: "Up/Dn",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -8,
                                title: "To (KM)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -9,
                                title: "From (KM)",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -10,
                                title: "Output/Unit",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -11,
                                title: "Work Type",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -12,
                                title: "Date",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -13,
                                title: "Gang",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -14,
                                title: "MUJ",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -15,
                                title: "KMUJ",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -16,
                                title: "Region",
                                render: function (data, type, full, meta) {
                                    return data;
                                },
                            },
                            {
                                targets: -17,
                                title: "No",
                                render: function (data, type, full, meta) {
                                    return counter++;
                                },
                            }],
                        createdRow: function (row, data, dataIndex) {
                            $('td', row).addClass('text-nowrap align-middle');
                        }

                    });
                },
                error: function (xhr) {
                    swarning();
                },
                complete: function () {
                }
            });
        }

    </script>
}


